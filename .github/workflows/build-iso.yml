name: Build ELIAS NixOS Installer ISO

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-iso:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Nix
      uses: cachix/install-nix-action@v25
      with:
        nix_path: nixpkgs=channel:nixos-24.05
        extra_nix_config: |
          experimental-features = nix-command flakes
          
    - name: Setup Cachix
      uses: cachix/cachix-action@v14
      with:
        name: nix-community
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        
    - name: Build NixOS ISO
      run: |
        echo "Building ELIAS Universal NixOS Installer..."
        nix build .#nixosConfigurations.installer.config.system.build.isoImage \
          --option sandbox false \
          --option system-features "benchmark big-parallel kvm nixos-test" \
          --max-jobs auto
          
    - name: Get ISO info
      id: iso_info
      run: |
        ISO_PATH=$(readlink -f result/iso/*.iso)
        ISO_NAME=$(basename "$ISO_PATH")
        ISO_SIZE=$(du -h "$ISO_PATH" | cut -f1)
        echo "iso_path=$ISO_PATH" >> $GITHUB_OUTPUT
        echo "iso_name=$ISO_NAME" >> $GITHUB_OUTPUT
        echo "iso_size=$ISO_SIZE" >> $GITHUB_OUTPUT
        echo "ISO built: $ISO_NAME ($ISO_SIZE)"
        
    - name: Upload ISO artifact
      uses: actions/upload-artifact@v4
      with:
        name: elias-nixos-installer-iso
        path: ${{ steps.iso_info.outputs.iso_path }}
        retention-days: 30
        
    - name: Create release on tag
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ steps.iso_info.outputs.iso_path }}
        body: |
          ELIAS Universal NixOS Installer
          
          **Features:**
          - WiFi 7 support (MediaTek MT7925 chipset)
          - Kernel 6.7+ for modern hardware
          - SSH key-based authentication
          - NetworkManager with nmtui interface
          - Mission briefing with setup instructions
          
          **ISO Details:**
          - File: ${{ steps.iso_info.outputs.iso_name }}
          - Size: ${{ steps.iso_info.outputs.iso_size }}
          
          **Usage:**
          1. Flash this ISO to a USB drive using dd or similar tool
          2. Boot your target machine from the USB
          3. Follow the Mission Briefing instructions displayed on boot
          
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}